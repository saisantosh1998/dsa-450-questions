######UNION#####
public static int doUnion(int a[], int n, int b[], int m) 
{     
    
      HashMap<Integer, Integer> mp = new HashMap<Integer, Integer>();
      for (int i=0;i<n;i++){
          mp.put(a[i],i);
      }
      for (int i=0;i<m;i++){
          mp.put(b[i],i);
      }
      return mp.size();
}
#####INTERSECTION#####
 public int[] intersection(int[] nums1, int[] nums2) {
        HashSet<Integer> arr=new HashSet<Integer>();
        HashMap<Integer,Integer> mp= new HashMap<Integer,Integer>();
        for (int i=0;i<nums1.length;i++){
            mp.put(nums1[i],i);

        }
        for (int j=0;j<nums2.length;j++){
            if (mp.containsKey(nums2[j])){
                arr.add(nums2[j]);
            }
        }
        int[] res= new int[arr.size()];
        Iterator iter = arr.iterator();
        int i=0;
        while (iter.hasNext()) {
            res[i]=(int)iter.next();
            i++;
        }
        return res;
    }
